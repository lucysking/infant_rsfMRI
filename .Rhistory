age_scan_t2 = age_scan,
age_scan_corr_t2 = age_scan_corr
)
scan_age_6mo <-
readxl::read_xlsx(scan_dates_6mo_file) %>%
rename(
ID = Grant_ID,
scan_date_6mo = Date_of_Scan_1,
age_scan = `Age at Scan 1`,
age_scan_corr = `Corrected Age at Scan 1`
) %>%
mutate(
ID = str_replace(ID, "x", ""),
ID = as.numeric(ID),
Is_Rescan = as.numeric(Is_Rescan)
) %>%
group_by(ID) %>%
# keep data from rescan if rescan completed
mutate(
rescanned = sum(Is_Rescan),
keep = if_else(
rescanned == 0 | (Is_Rescan == 1 & rescanned == 1),
1, 0
)
) %>%
arrange(ID) %>%
ungroup() %>%
filter(keep == 1) %>%
select(
ID,
scan_date_t3 = scan_date_6mo,
age_scan_t3 = age_scan,
age_scan_corr_t3 = age_scan_corr
)
demo_cs <-
read_csv(demo_cs_6mo_file) %>%
select(record_id, mom_ethnicity:child_pob) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id) %>%
left_join(
read_csv(dob_cs_file) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id),
by = "ID"
) %>%
left_join(
read_csv(visit_date_cs_file) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id) %>%
filter(!is.na(ID)) %>%
select(ID, behav_visit_date = crf_date),
by = "ID"
) %>%
left_join(
scan_age_6mo %>%
rename(age_scan = age_scan_t3, age_scan_corr = age_scan_corr_t3),
by = "ID"
) %>%
rename(
due_date = baby_due_date,
baby_race = child_race,
baby_ethnicity = child_ethnicity,
baby_race_describe = childrace_describe,
baby_pob = child_pob
) %>%
mutate(
male = if_else(
baby_sex == 1,
0, 1
),
mom_dob = parse_date(mom_dob, "%m/%d/%y"),
baby_dob = parse_date(baby_dob, "%m/%d/%y"),
due_date = parse_date(due_date, "%m/%d/%y"),
behav_visit_date = parse_date(behav_visit_date, format = "%m/%d/%y"),
conception_date = due_date - weeks(40),
gestational_weeks_birth = (conception_date %--% baby_dob) / weeks(1),
age_behav = (baby_dob %--% behav_visit_date) / months(1),
mom_age = (mom_dob %--% behav_visit_date) / years(1)
) %>%
select(-baby_sex) %>%
filter(!is.na(behav_visit_date) | !is.na(scan_date_t3)) %>%
mutate(partner_age = as.numeric(partner_age)) %>%
rename(
mom_latinx = mom_ethnicity,
baby_latinx = baby_ethnicity,
in_home_partner = ppl_in_home___1,
in_home_infant = ppl_in_home___2,
in_home_preschool = ppl_in_home___3,
in_home_olderchild = ppl_in_home___4,
in_home_maternal_grandmom = ppl_in_home___5,
in_home_maternal_granddad = ppl_in_home___6,
in_home_paternal_grandpar = ppl_in_home___7,
in_home_friend = ppl_in_home___8,
in_home_otherfam = ppl_in_home___9,
live_alone = ppl_in_home___10,
in_home_other = ppl_in_home___11,
ppl_in_home_allinfants = ppl_in_home_infants,
ppl_in_home_allpreschool = ppl_in_home_preschool,
ppl_in_home_allolderchild = ppl_in_home_schoolage
) %>%
mutate(
mom_race = factor(
mom_race,
levels = c(1, 2, 3, 4, 5, 6),
labels = c(
"American Indian/Alaska Native",
"Asian",
"Black/African American",
"Native Hawaiian/Other Pacific Islander",
"White",
"Other"
)
),
education = recode(
education,
"0" = "0",
"2" = "1",
"3" = "2",
"4" = "3",
"5" = "4",
"6" = "5",
"7" = "6",
"8" = "7",
"9" = "8",
"10" = "9"
),
education_txt = factor(
education,
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
labels = c(
"No schooling completed",
"Nursery school-8th grade",
"Some high school, no diploma",
"High school graduate/diploma/equivalent (i.e. GED)",
"Some college credit, no degree",
"Trade/technical/vocational training",
"Associate degree",
"Bachelor's degree",
"Graduate degree",
"Other"
)
),
employment_status_txt = factor(
employment_status,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
labels = c(
"Employed for wages",
"Self-employed",
"Out of work, looking for work",
"Out of work, not looking for work",
"Homemaker",
"Student",
"Military",
"Retired",
"Unable to work",
"Other"
)
),
marital_status_txt = factor(
marital_status,
levels = c(1, 2, 3, 4, 5, 6),
labels = c(
"Single, never married",
"Married/domestic partnership",
"Widowed",
"Divorced",
"Separated",
"Other"
)
),
partner_educ = recode(
education,
"0" = "0",
"2" = "1",
"3" = "2",
"4" = "3",
"5" = "4",
"6" = "5",
"7" = "6",
"8" = "7",
"9" = "8",
"10" = "9"
),
partner_educ_txt = factor(
partner_educ,
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
labels = c(
"No schooling completed",
"Nursery school-8th grade",
"Some high school, no diploma",
"High school graduate/diploma/equivalent (i.e. GED)",
"Some college credit, no degree",
"Trade/technical/vocational training",
"Associate degree",
"Bachelor's degree",
"Graduate degree",
"Other"
)
),
partner_employ_txt =  factor(
partner_employ,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
labels = c(
"Employed for wages",
"Self-employed",
"Out of work, looking for work",
"Out of work, not looking for work",
"Homemaker",
"Student",
"Military",
"Retired",
"Unable to work",
"Other"
)
),
annual_income_txt = factor(
annual_income,
levels = c(1, 2, 3, 4, 5, 6, 7),
labels = c(
"$0-5,000",
"$5,001-15,000",
"$15,001-30,000",
"30,001-60,000",
"60,001-90,000",
"90,001-150,000",
">$150,000"
)
),
baby_race = factor(
baby_race,
levels = c(1, 2, 3, 4, 5, 6, 7),
labels = c(
"American Indian/Alaska Native",
"Asian",
"Black/African American",
"Prefer not to answer",
"Native Hawaiian/Other Pacific Islander",
"White",
"Other"
)
)
) %>%
group_by(ID) %>%
mutate(
ppl_in_home_tot = ppl_in_home_adults + ppl_in_home_allchild,
annual_income_num = recode(
annual_income,
"1" = 2500,
"2" = 10000,
"3" = 22500,
"4" = 45000,
"5" = 75000,
"6" = 120000,
"7" = 150000
),
#santa clara country low-income limit : 80% of median income (ratios <= 1 are therefore "low income")
#https://www.huduser.gov/portal/datasets/il/il2017/2017summary.odn
ppl_in_home_tot_SClimit = recode(
ppl_in_home_tot,
"1" = 59350,
"2" = 67800,
"3" = 76300,
"4" = 84750,
"5" = 91500,
"6" = 98350,
"7" = 105100,
"8" = 111900,
.default = 111900
),
income_needs = annual_income_num / ppl_in_home_tot_SClimit
) %>%
ungroup() %>%
select(-partner_in_home, -mom_dob)
demo_cs <-
read_csv(demo_cs_6mo_file) %>%
select(record_id, mom_ethnicity:child_pob) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id) %>%
left_join(
read_csv(dob_cs_file) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id),
by = "ID"
) %>%
left_join(
read_csv(visit_date_cs_file) %>%
mutate(record_id = as.numeric(record_id)) %>%
rename(ID = record_id) %>%
filter(!is.na(ID)) %>%
select(ID, behav_visit_date = crf_date),
by = "ID"
) %>%
left_join(
scan_age_6mo %>%
rename(age_scan = age_scan_t3, age_scan_corr = age_scan_corr_t3),
by = "ID"
) %>%
rename(
due_date = baby_due_date,
baby_race = child_race,
baby_ethnicity = child_ethnicity,
baby_race_describe = childrace_describe,
baby_pob = child_pob
) %>%
mutate(
male = if_else(
baby_sex == 1,
0, 1
),
mom_dob = parse_date(mom_dob, "%m/%d/%y"),
baby_dob = parse_date(baby_dob, "%m/%d/%y"),
due_date = parse_date(due_date, "%m/%d/%y"),
behav_visit_date = parse_date(behav_visit_date, format = "%m/%d/%y"),
conception_date = due_date - weeks(40),
gestational_weeks_birth = (conception_date %--% baby_dob) / weeks(1),
age_behav = (baby_dob %--% behav_visit_date) / months(1),
mom_age = (mom_dob %--% behav_visit_date) / years(1)
) %>%
select(-baby_sex) %>%
filter(!is.na(behav_visit_date) | !is.na(scan_date_t3)) %>%
mutate(partner_age = as.numeric(partner_age)) %>%
rename(
mom_latinx = mom_ethnicity,
baby_latinx = baby_ethnicity,
in_home_partner = ppl_in_home___1,
in_home_infant = ppl_in_home___2,
in_home_preschool = ppl_in_home___3,
in_home_olderchild = ppl_in_home___4,
in_home_maternal_grandmom = ppl_in_home___5,
in_home_maternal_granddad = ppl_in_home___6,
in_home_paternal_grandpar = ppl_in_home___7,
in_home_friend = ppl_in_home___8,
in_home_otherfam = ppl_in_home___9,
live_alone = ppl_in_home___10,
in_home_other = ppl_in_home___11,
ppl_in_home_allinfants = ppl_in_home_infants,
ppl_in_home_allpreschool = ppl_in_home_preschool,
ppl_in_home_allolderchild = ppl_in_home_schoolage
) %>%
mutate(
mom_race = factor(
mom_race,
levels = c(1, 2, 3, 4, 5, 6),
labels = c(
"American Indian/Alaska Native",
"Asian",
"Black/African American",
"Native Hawaiian/Other Pacific Islander",
"White",
"Other"
)
),
education = recode(
education,
"0" = "0",
"2" = "1",
"3" = "2",
"4" = "3",
"5" = "4",
"6" = "5",
"7" = "6",
"8" = "7",
"9" = "8",
"10" = "9"
),
education_txt = factor(
education,
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
labels = c(
"No schooling completed",
"Nursery school-8th grade",
"Some high school, no diploma",
"High school graduate/diploma/equivalent (i.e. GED)",
"Some college credit, no degree",
"Trade/technical/vocational training",
"Associate degree",
"Bachelor's degree",
"Graduate degree",
"Other"
)
),
employment_status_txt = factor(
employment_status,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
labels = c(
"Employed for wages",
"Self-employed",
"Out of work, looking for work",
"Out of work, not looking for work",
"Homemaker",
"Student",
"Military",
"Retired",
"Unable to work",
"Other"
)
),
marital_status_txt = factor(
marital_status,
levels = c(1, 2, 3, 4, 5, 6),
labels = c(
"Single, never married",
"Married/domestic partnership",
"Widowed",
"Divorced",
"Separated",
"Other"
)
),
partner_educ = recode(
education,
"0" = "0",
"2" = "1",
"3" = "2",
"4" = "3",
"5" = "4",
"6" = "5",
"7" = "6",
"8" = "7",
"9" = "8",
"10" = "9"
),
partner_educ_txt = factor(
partner_educ,
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
labels = c(
"No schooling completed",
"Nursery school-8th grade",
"Some high school, no diploma",
"High school graduate/diploma/equivalent (i.e. GED)",
"Some college credit, no degree",
"Trade/technical/vocational training",
"Associate degree",
"Bachelor's degree",
"Graduate degree",
"Other"
)
),
partner_employ_txt =  factor(
partner_employ,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
labels = c(
"Employed for wages",
"Self-employed",
"Out of work, looking for work",
"Out of work, not looking for work",
"Homemaker",
"Student",
"Military",
"Retired",
"Unable to work",
"Other"
)
),
annual_income_txt = factor(
annual_income,
levels = c(1, 2, 3, 4, 5, 6, 7),
labels = c(
"$0-5,000",
"$5,001-15,000",
"$15,001-30,000",
"30,001-60,000",
"60,001-90,000",
"90,001-150,000",
">$150,000"
)
),
baby_race = factor(
baby_race,
levels = c(1, 2, 3, 4, 5, 6, 7),
labels = c(
"American Indian/Alaska Native",
"Asian",
"Black/African American",
"Prefer not to answer",
"Native Hawaiian/Other Pacific Islander",
"White",
"Other"
)
)
) %>%
group_by(ID) %>%
mutate(
ppl_in_home_tot = ppl_in_home_adults + ppl_in_home_allchild,
annual_income_num = recode(
annual_income,
"1" = 2500,
"2" = 10000,
"3" = 22500,
"4" = 45000,
"5" = 75000,
"6" = 120000,
"7" = 150000
),
#santa clara country low-income limit : 80% of median income (ratios <= 1 are therefore "low income")
#https://www.huduser.gov/portal/datasets/il/il2017/2017summary.odn
ppl_in_home_tot_SClimit = recode(
ppl_in_home_tot,
"1" = 59350,
"2" = 67800,
"3" = 76300,
"4" = 84750,
"5" = 91500,
"6" = 98350,
"7" = 105100,
"8" = 111900,
.default = 111900
),
income_needs = annual_income_num / ppl_in_home_tot_SClimit
) %>%
ungroup() %>%
select(-partner_in_home, -mom_dob)
